services:
  api_gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./api_gateway:/app
      - ./results:/results
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      ssh_node_1:
        condition: service_healthy

  ssh_node_1:
    build:
      context: ./ssh_node
      dockerfile: Dockerfile
    ports:
      - "2222:22"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    healthcheck:
      test: ["CMD", "sshpass", "-p", "sshpassword", "ssh", "-o", "StrictHostKeyChecking=no", "sshuser@localhost", "exit"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 45s

  ssh_node_2:
    build:
      context: ./ssh_node
      dockerfile: Dockerfile
    ports:
      - "2223:22"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    healthcheck:
      test: ["CMD", "sshpass", "-p", "sshpassword", "ssh", "-o", "StrictHostKeyChecking=no", "sshuser@localhost", "exit"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 45s

  ssh_node_3:
    build:
      context: ./ssh_node
      dockerfile: Dockerfile
    ports:
      - "2224:22"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    healthcheck:
      test: ["CMD", "sshpass", "-p", "sshpassword", "ssh", "-o", "StrictHostKeyChecking=no", "sshuser@localhost", "exit"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 45s

  ssh_node_4:
    build:
      context: ./ssh_node
      dockerfile: Dockerfile
    ports:
      - "2225:22"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    healthcheck:
      test: ["CMD", "sshpass", "-p", "sshpassword", "ssh", "-o", "StrictHostKeyChecking=no", "sshuser@localhost", "exit"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 45s

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client:/app
    depends_on:
      api_gateway:
        condition: service_healthy
    restart: "no"

  plot_generator:
    build:
      context: ./plot_generator
      dockerfile: Dockerfile
    volumes:
      - ./results:/results
    profiles:
      - "tools"
